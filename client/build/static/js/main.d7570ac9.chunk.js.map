{"version":3,"sources":["logo.svg","components/Notifier.js","components/SubmitForm.js","components/Type.js","components/HomePage.js","components/Authenticate.js","components/SubmissionView.js","components/Admin.js","components/Listen.js","components/ListPage.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","openSnackbarFn","Notifier","props","state","open","message","this","openSnackbar","bind","setState","console","log","anchorOrigin","vertical","horizontal","id","autoHideDuration","onClose","handleSnackbarClose","SnackbarContentProps","Component","FormContainer","styled","div","blankState","submitor","title","description","email","name","submissionType","audioURL","duration","includeEmail","errors","SubmitForm","info","fileUrl","audioFileSize","file","size","audioFileType","prog","e","target","event","type","checked","value","fetch","method","body","JSON","stringify","headers","mode","then","catch","reduce","errorHash","key","length","Object","values","filter","a","createSubmission","validateAndSubmit","src","autoPlay","onLoadedMetadata","handleSoundLoaded","controls","style","textAlign","split","undefined","color","required","label","onChange","handleChange","errorText","error","artistLink","socialMedia","component","row","control","acknowledgement","onFinish","handleFinishedUpload","s3Url","maxSize","upload","s3path","ContentType","accept","width","border","onDone","d","onProgress","boxSizing","padding","renderDropzoneContent","renderSound","variant","onClick","submit","HeaderLarge","fontSize","gutterBottom","children","HeaderSmall","marginBottom","marginTop","Text","fontWeight","useState","current","updateCurrent","next","updateNext","shouldAutoplay","updateAutoplay","entries","updateEntries","useEffect","r","json","ents","Math","floor","random","href","Fragment","onEnded","display","flexDirection","justifyContent","slug","Authenticate","username","password","autoComplete","onAttemptLogin","React","stateColors","pending","approved","rejected","adminControlls","onReject","_id","onApprove","Container","Admin","auth","submissions","Headers","append","getHeaders","submission","newList","map","savedSubmission","updateSubmission","err","flexGrow","position","flex","publishFeed","sub","SubmissionView","rejectSubmission","acceptSubmission","base64","encode","getSubmissions","Listen","episode","updateEpisode","updateError","match","params","ListPage","episodes","updateEpisodes","res","includes","App","exact","path","HomePage","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","response","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"2KAAAA,EAAOC,QAAU,IAA0B,kC,kECIvCC,E,6IAkDWC,E,YA3Bb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAjBRC,MAAM,CACJC,MAAO,EACPC,QAAS,IAcQ,E,iFAVjBL,EAAiBM,KAAKC,aAAaC,KAAKF,Q,mCAG5BD,GACZC,KAAKG,SAAS,CACZL,MAAM,EACNC,gB,2DASFC,KAAKG,SAAS,CACXL,MAAK,EACLC,QAAQ,O,+BAMX,OADAK,QAAQC,IAAIL,KAAKH,MAAME,SAErB,kBAAC,IAAD,CACIO,aAAc,CAAEC,SAAU,SAAUC,WAAY,SAChDT,QAAS,0BAAMU,GAAG,cAAcT,KAAKH,MAAME,SAC3CW,iBAAkB,IAClBC,QAASX,KAAKY,oBAAoBV,KAAKF,MACvCF,KAAME,KAAKH,MAAMC,KACjBe,qBAAsB,CACpB,mBAAoB,6B,GA1CTC,aAkDhB,SAASb,EAAcF,GAC5BL,EAAgBK,G,qZCxClB,IAAMgB,EAAgBC,IAAOC,IAAV,KAQbC,EAAa,CACfC,SAAS,GACTC,MAAM,GACNC,YAAY,GACZC,MAAM,GACNC,KAAK,GACLC,eAAgB,YAChBC,SAAS,KACTC,SAAU,KACVC,cAAc,EACdC,OAAO,IAyOIC,E,2MAlObhC,MAAQqB,E,oFAOaY,GACnB7B,EAAa,6BACbG,QAAQC,IAAI,aAAcyB,GAC1B9B,KAAKG,SAAS,CACZsB,SAAUK,EAAKC,QACfC,cAAeF,EAAKG,KAAKC,KACzBC,cAAe,aACfC,KAAK,S,wCAGSC,GAChBrC,KAAKG,SAAS,CACZuB,SAAWW,EAAEC,OAAOZ,a,mCAIXH,GAAM,IAAD,OAChB,OAAO,SAACgB,GACN,EAAKpC,SAAL,eACGoB,EAA6B,aAAtBgB,EAAMD,OAAOE,KAAsBD,EAAMD,OAAOG,QAAUF,EAAMD,OAAOI,W,yCAKlE,IAAD,OAChBzC,EAAa,wBACb0C,MAAM,UAAW,CACfC,OAAO,OACPC,KAAMC,KAAKC,UAAU/C,KAAKH,OAC1BmD,QAAS,CACP,eAAgB,oBAElBC,KAAM,SACLC,MAAK,WACN,EAAK/C,SAAS,CACZiB,MAAM,GACNC,YAAY,GACZI,SAAS,OAEXxB,EAAa,8BACZkD,OAAM,WACPlD,EAAa,+E,0CAIG,IAAD,OACjBG,QAAQC,IAAI,cACZ,IAAMuB,EAAS,CAAC,WAAY,QAAS,QAAQ,cAAe,iBAAkB,WAAY,mBAAmBwB,QAAO,SAACC,EAAWC,GAI9H,OAHI,EAAKzD,MAAMyD,IAAiC,GAAzB,EAAKzD,MAAMyD,GAAKC,SACrCF,EAAUC,GAAO,0BAEZD,IACN,IAEHrD,KAAKG,SAAS,CAACyB,WAAQ,WACoC,GAAtD4B,OAAOC,OAAO,EAAK5D,MAAM+B,QAAQ8B,QAAO,SAAAC,GAAC,OAAEA,KAAGJ,QAC/CnD,QAAQC,IAAI,cACZ,EAAKuD,oBAGL3D,EAAa,gF,+BAMjBD,KAAK6D,sB,oCAIL,GAAG7D,KAAKH,MAAM4B,SACZ,OACE,kBAAC,IAAD,CACEqC,IAAM9D,KAAKH,MAAM4B,SACjBsC,UAAU,EACVC,iBAAoBhE,KAAKiE,kBAAkB/D,KAAKF,MAChDkE,UAAQ,M,8CAOd,OAAGlE,KAAKH,MAAM4B,SACJ,uBAAG0C,MAAO,CAACC,UAAU,WAC1BpE,KAAKH,MAAM4B,SAAS4C,MAAM,KAAMrE,KAAKH,MAAM4B,SAAS4C,MAAM,KAAKd,OAAS,IAGpEvD,KAAKH,MAAMuC,KACV,uBAAG+B,MAAO,CAACC,UAAU,WAArB,IAAkCpE,KAAKH,MAAMuC,KAA7C,kBAE8BkC,IAA/BtE,KAAKH,MAAM+B,OAAOH,SACjB,uBAAG0C,MAAO,CAACI,MAAM,MAAOH,UAAU,WAAlC,4BAGC,uBAAGD,MAAO,CAACC,UAAU,WAArB,yC,+BAMH,IAAD,OAKP,OACE,kBAACrD,EAAD,KACE,kBAAC,IAAD,CACEN,GAAG,WACH+D,UAAQ,EACRC,MAAM,qCACN/B,MAAO1C,KAAKH,MAAMsB,SAClBuD,SAAU1E,KAAK2E,aAAa,YAC5BC,UAAW5E,KAAKH,MAAM+B,OAAOT,SAC7B0D,MAAQ7E,KAAKH,MAAM+B,OAAOT,WAG5B,kBAAC,IAAD,CACEV,GAAG,OACHgE,MAAM,uBACN/B,MAAO1C,KAAKH,MAAM0B,KAClBmD,SAAU1E,KAAK2E,aAAa,UAG9B,kBAAC,IAAD,CACElE,GAAG,QACH+D,UAAQ,EACRC,MAAM,QACN/B,MAAO1C,KAAKH,MAAMuB,MAClBsD,SAAU1E,KAAK2E,aAAa,SAC5BC,UAAW5E,KAAKH,MAAM+B,OAAOR,MAC7ByD,MAAO7E,KAAKH,MAAM+B,OAAOR,QAG3B,kBAAC,IAAD,CACEX,GAAG,0HACH+D,UAAQ,EACRC,MAAM,cACN/B,MAAO1C,KAAKH,MAAMwB,YAClBqD,SAAU1E,KAAK2E,aAAa,eAC5BC,UAAW5E,KAAKH,MAAM+B,OAAOP,YAC7BwD,MAAO7E,KAAKH,MAAM+B,OAAOP,cAG3B,kBAAC,IAAD,CACEZ,GAAG,QACH+D,UAAQ,EACRC,MAAM,iFACN/B,MAAO1C,KAAKH,MAAMyB,MAClBoD,SAAU1E,KAAK2E,aAAa,SAC5BC,UAAW5E,KAAKH,MAAM+B,OAAON,MAC7BuD,MAAO7E,KAAKH,MAAM+B,OAAON,QAG3B,kBAAC,IAAD,CACEb,GAAG,aACHgE,MAAM,yBACN/B,MAAO1C,KAAKH,MAAMiF,WAClBJ,SAAU1E,KAAK2E,aAAa,gBAG9B,kBAAC,IAAD,CACElE,GAAG,cACHgE,MAAM,+BACN/B,MAAO1C,KAAKH,MAAMkF,YAClBL,SAAU1E,KAAK2E,aAAa,iBAG9B,kBAAC,IAAD,CAAaK,UAAU,WAAWR,UAAQ,GAExC,kBAAC,IAAD,CAAYQ,UAAU,UAAtB,mBACA,kBAAC,IAAD,CACEC,KAAG,EACHvC,MAAO1C,KAAKH,MAAM2B,eAClBkD,SAAU1E,KAAK2E,aAAa,mBAE5B,kBAAC,IAAD,CAAkBjC,MAAM,YAAYwC,QAAS,kBAAC,IAAD,CAAOX,MAAM,YAAcE,MAAM,cAC9E,kBAAC,IAAD,CAAkB/B,MAAM,iBAAiBwC,QAAS,kBAAC,IAAD,CAAOX,MAAM,YAAcE,MAAM,yBAKvF,kBAAC,IAAD,CACES,QACE,kBAAC,IAAD,CACEzC,QAASzC,KAAKH,MAAMsF,gBACpBT,SAAU1E,KAAK2E,aAAa,mBAC5BjC,MAAM,kBACNmC,MAAS7E,KAAKH,MAAM+B,OAAOuD,kBAG/BN,MAAS7E,KAAKH,MAAM+B,OAAOuD,gBAC3BV,MAAM,8RAGR,kBAAC,IAAD,CACIW,SAAUpF,KAAKqF,qBAAqBnF,KAAKF,MACzCsF,MAAO,gDACPC,QAAS,SACTC,OAlGY,CAClBC,OAAQ,gBACRC,YAAa,aAiGPC,OAAO,UACPxB,MAAO,CAACyB,MAAM,OAAQC,OAAO,oBAC7BC,OAAS,SAACC,GAAD,OAAO3F,QAAQC,IAAI,QAAQ0F,IACpCC,WAAY,SAAC5D,GAAQ,EAAKjC,SAAS,CAACiC,KAAKA,MAE3C,yBAAK+B,MAAO,CAAC8B,UAAU,aAAcC,QAAQ,SAC1ClG,KAAKmG,0BAKTnG,KAAKoG,cACN,kBAAC,IAAD,CAAQC,QAAQ,SAAS9B,MAAM,UAAU+B,QAAS,kBAAI,EAAKC,WAA3D,e,GA7NiBzF,a,iBCtCZ0F,EAAc,SAAA5G,GAAK,OAC9B,kBAAC,IAAD,CAAYuE,MAAO,CAACsC,SAAU,UAAWJ,QAAQ,WAAWK,cAAY,GACrE9G,EAAM+G,WAIEC,EAAc,SAAAhH,GAAK,OAC9B,kBAAC,IAAD,CACEyG,QAAQ,WACRlC,MAAO,CAAC0C,aAAc,OAAQC,UAAW,OAAQL,SAAU,QAC3DC,cAAY,GACX9G,EAAM+G,WAIEI,EAAO,SAAAnH,GAAK,OACvB,kBAAC,IAAD,CACEyG,QAAQ,QACRlC,MAAO,CAAC0C,aAAc,OAAQG,WAAY,KAC1CN,cAAY,GACX9G,EAAM+G,WCjBI,WAAA/G,GAAU,IAAD,EACWqH,mBAAS,MADpB,mBACfC,EADe,KACNC,EADM,OAEKF,mBAAS,MAFd,mBAEfG,EAFe,KAETC,EAFS,OAGmBJ,oBAAS,GAH5B,mBAGfK,EAHe,KAGCC,EAHD,OAKWN,mBAAS,MALpB,mBAKfO,EALe,KAKNC,EALM,KAgBtB,OAVAC,qBAAU,WACR/E,MAAM,UACHO,MAAK,SAAAyE,GAAC,OAAIA,EAAEC,UACZ1E,MAAK,SAAA2E,GACJJ,EAAcI,GACdV,EAAcU,EAAKC,KAAKC,MAAMD,KAAKE,SAAWH,EAAKtE,UACnD8D,EAAWQ,EAAKC,KAAKC,MAAMD,KAAKE,SAAWH,EAAKtE,eAEnD,IAGD,6BACE,kBAAC,EAAD,wCACA,kBAAC,EAAD,sFAGE,6BAHF,WAIU,uBAAG0E,KAAK,aAAR,YACP,MACD,uBAAGA,KAAK,gDAAR,OANF,IAMkE,MAChE,uBAAGA,KAAK,uBAAR,eACC,MACD,uBAAGA,KAAK,0DACL,IACA,MAFH,eAKC,MAdH,gDAgBE,6BAhBF,aAiBY,uBAAGA,KAAK,iCAAR,iBAEL,IACJ,MACD,uBAAGA,KAAK,gCAAR,eAGDf,GAAWE,GACV,kBAAC,IAAMc,SAAP,KACE,kBAAC,EAAD,gCACA,kBAAC,IAAD,CACE/D,MAAO,CAACyB,MAAO,QACf9B,IAAKoD,EAAQzF,SACbsC,SAAUuD,EACVpD,UAAQ,EACRiE,QAAS,WACPhB,EAAcC,GACdC,EAAWG,EAAQM,KAAKC,MAAMD,KAAKE,SAAWR,EAAQjE,UACtDgE,GAAe,MAGnB,yBACEpD,MAAO,CACLiE,QAAS,OACTC,cAAe,MACfC,eAAgB,kBAElB,kBAAC,EAAD,CAAMnE,OAAK,GAAX,QACO,uBAAG8D,KAAI,kBAAaf,EAAQqB,OAASrB,EAAQ9F,QAEpD,kBAAC,EAAD,cACQ,uBAAG6G,KAAI,kBAAab,EAAKmB,OAASnB,EAAKhG,SAGjD,kBAAC,EAAD,KACE,uBAAG6G,KAAK,aAAR,kBAKN,kBAAC,EAAD,uBACA,kBAAC,EAAD,0PAOA,kBAAC,EAAD,+BACyB,iEAEzB,kBAAC,EAAD,qEAEA,kBAAC,EAAD,yBAEA,kBAAC,EAAD,4DAEA,kBAAC,EAAD,MACA,kBAAC,EAAD,gCACA,kBAAC,EAAD,kGAGE,4BACE,kDACA,kEACA,oCACA,mDACA,oDACA,oEACA,wDACA,uEACA,mDACA,+EACA,8EACA,kDACA,kEACA,yEACA,iGAIJ,kBAAC,EAAD,uPAMA,kBAAC,EAAD,cACQ,0DADR,mIAKA,kBAAC,EAAD,6BACA,kBAAC,EAAD,KACE,4BACE,uDACA,sJAIA,4BACE,2CAEF,wFACA,4GAIA,mKAfJ,oPAwBE,6BAxBF,qRA6BE,6BA7BF,yOAkCE,6BACA,4EAnCF,gNAyCA,kBAAC,EAAD,8BACA,kBAAC,EAAD,oRAImD,IACjD,uBAAGA,KAAK,mFAAR,qBAEK,IAPP,KAQK,IACH,uBAAGA,KAAK,sDAAR,2BATF,IAaE,6BAbF,yHAgBE,6BAhBF,wCAiBuC,uBAAGA,KAAK,aAAR,YAjBvC,KAmBA,kBAAC,EAAD,4BACA,kBAAC,EAAD,oLAGgC,IAC9B,uBAAGA,KAAK,gCAAR,cAJF,kEAK0C,IACxC,uBAAGA,KAAK,iCAAR,cANF,2GAQmB,uBAAGA,KAAK,aAAR,YARnB,IASE,6BATF,oEAUoE,IAClE,uBAAGA,KAAK,wCAAR,kCAKF,kBAAC,EAAD,2BACA,kBAAC,EAAD,4IAGE,uBAAGA,KAAK,wCAAR,iCAHF,+NC7KSO,E,2MApCb3I,MAAM,CACJ4I,SAAS,GACTC,SAAS,I,sEAEJ9I,GAAO,IAAD,OACX,OACE,6BACE,kBAAC,IAAD,CACEa,GAAI,WACJgE,MAAM,WACND,UAAQ,EACR9B,MAAS1C,KAAKH,MAAM4I,SACpBjG,KAAK,WACLmG,aAAa,WACbjE,SAAY,SAACrC,GAAO,EAAKlC,SAAS,CAACsI,SAAUpG,EAAEC,OAAOI,WAGxD,kBAAC,IAAD,CACEjC,GAAI,WACJgE,MAAM,WACND,UAAQ,EACRhC,KAAK,WACLmG,aAAa,mBACbjG,MAAS1C,KAAKH,MAAM6I,SACpBhE,SAAY,SAACrC,GAAO,EAAKlC,SAAS,CAACuI,SAAUrG,EAAEC,OAAOI,WAG1D,kBAAC,IAAD,CACE2D,QAAQ,SACR9B,MAAM,UACN+B,QAAS,WAAK,EAAK1G,MAAMgJ,eAAe,EAAK/I,MAAM4I,SAAS,EAAK5I,MAAM6I,YAHzE,iB,GA5BqBG,IAAM/H,W,kBCA3BgI,GAAc,CAChBC,QAAS,OACTC,SAAU,QACVC,SAAU,OAGC,YAAArJ,GAAK,OAChB,yBAAKuE,MAAO,CAAEyB,MAAO,OAAQkB,UAAW,SACpC,qCAAWlH,EAAMwB,OACjB,oCACW,IACP,0BAAM+C,MAAO,CAAEI,MAAOuE,GAAYlJ,EAAMC,SACnCD,EAAMC,QAGf,2CAAiBD,EAAMyB,aACvB,+CAAqBzB,EAAM4B,gBAC3B,2CAAiB5B,EAAMkF,YACvB,2CAAiBlF,EAAMmF,aACvB,qCAAWnF,EAAM0B,OACjB,8CAAoB1B,EAAMuF,iBAE1B,kDACA,kBAAC,IAAD,CAAkBrB,IAAKlE,EAAM6B,SAAUsC,UAAU,EAAOG,UAAQ,IAC/DtE,EAAMsJ,gBACH,6BACI,kBAAC,IAAD,CACI7C,QAAQ,SACR9B,MAAM,YACN+B,QAAS,WACL1G,EAAMuJ,SAASvJ,EAAMwJ,OAJ7B,UASA,kBAAC,IAAD,CACI/C,QAAQ,SACR9B,MAAM,UACN+B,QAAS,WACL1G,EAAMyJ,UAAUzJ,EAAMwJ,OAJ9B,a,uKC3BhB,IAAME,GAAYtI,IAAOC,IAAV,MAgIAsI,G,YAhHb,WAAY3J,GAAQ,IAAD,8BACjB,4CAAMA,KAXRC,MAAM,CACJ2J,KAAM,KACNC,YAAa,MAQI,E,0EAKjB,IAAIzG,EAAU,IAAI0G,QAElB,OADA1G,EAAQ2G,OAAO,gBAAiB3J,KAAKH,MAAM2J,MACpCxG,I,uCAEQ,IAAD,OACRA,EAAUhD,KAAK4J,aACrBjH,MAAM,iBAAkB,CACtBK,QAASA,IACRE,MAAK,SAAAyE,GAAC,OAAEA,EAAEC,UAAQ1E,MAAK,SAACuG,GACzB,EAAKtJ,SAAS,CACZsJ,qB,uCAKWI,GACf,IAAMC,EAAU9J,KAAKH,MAAM4J,YAAYM,KAAK,SAACpG,GAAD,OAAQA,EAAEyF,MAAMS,EAAWT,IAAMS,EAAalG,KAC1FvD,QAAQC,IAAIyJ,GACZ9J,KAAKG,SAAS,CACZsJ,YAAcK,M,uCAIDrJ,GAAI,IAAD,OACZuC,EAAUhD,KAAK4J,aACrBjH,MAAM,kBAAD,OAAmBlC,EAAnB,WACH,CACEmC,OAAS,OACTI,QAASA,IAEXE,MAAK,SAAAyE,GAAC,OAAEA,EAAEC,UAAQ1E,MAAK,SAAC8G,GACxB,EAAKC,iBAAiBD,Q,oCAKxB,IAAMhH,EAAUhD,KAAK4J,aACrBjH,MAAM,gBACJ,CACEC,OAAS,OACTI,QAASA,IAEXE,MAAK,SAAAyE,GAAC,OAAEA,EAAEC,UAAQ1E,MAAK,SAAC8G,GACxB/J,EAAa,2CACZkD,OAAM,SAAC+G,GACRjK,EAAa,qD,uCAIAQ,GAAI,IAAD,OACZuC,EAAUhD,KAAK4J,aACrBjH,MAAM,kBAAD,OAAmBlC,EAAnB,YACH,CACEmC,OAAS,OACTI,QAASA,IAEXE,MAAK,SAAAyE,GAAC,OAAEA,EAAEC,UAAQ1E,MAAK,SAAC8G,GACxB5J,QAAQC,IAAI2J,GACZ,EAAKC,iBAAiBD,Q,+BAIhB,IAAD,OACT,OACI,yBAAK7F,MAAO,CAACgG,SAAU,IACnBnK,KAAKH,MAAM4J,YAEP,kBAAC,KAAD,CAAQW,SAAS,UACf,kBAAC,KAAD,KACE,kBAAC,IAAD,CAAY/D,QAAQ,QAAQ9B,MAAM,UAAUJ,MAAO,CAAEkG,KAAM,IAA3D,sCAGA,kBAAC,IAAD,CAAQ/D,QAAStG,KAAKsK,YAAYpK,KAAKF,MAAOuE,MAAM,WAApD,aAGF,KAER,kBAAC+E,GAAD,KAEItJ,KAAKH,MAAM4J,YACJzJ,KAAKH,MAAM4J,YAAYM,KAAI,SAACQ,GAAD,OACzB,kBAACC,GAAD,iBACMD,EADN,CAEEjH,IAAKiH,EAAInB,IACTD,SAAU,EAAKsB,iBAAiBvK,KAAK,GACrCmJ,UAAW,EAAKqB,iBAAiBxK,KAAK,GACtCgJ,gBAAc,QAKzB,kBAAC,EAAD,CACEN,eAAiB,SAACH,EAASC,GACzB,IAAMc,EAAO,SAAWmB,IAAOC,OAAOnC,EAAW,IAAMC,GACvD,EAAKvI,SAAS,CAACqJ,QACb,EAAKqB,eAAe3K,KAAK,a,GA/GvBY,aCbL,SAASgK,GAAOlL,GAAQ,IAAD,EACHqH,mBAAS,MADN,mBAC7B8D,EAD6B,KACpBC,EADoB,OAEP/D,oBAAS,GAFF,mBAE7BpC,EAF6B,KAEtBoG,EAFsB,KAG9B1C,EAAO3I,EAAMsL,MAAMC,OAAO5C,KAchC,OAZAb,qBAAU,WACR/E,MAAM,UAAD,OAAW4F,IACbrF,MAAK,SAAAyE,GAAC,OAAIA,EAAEC,UACZ1E,MAAK,SAAA6H,GACJC,EAAcD,GACd3K,QAAQC,IAAI0K,MAEb5H,OAAM,SAAA+G,GACLe,GAAY,QAEfrL,EAAMsL,MAAMC,OAAO5C,MAGpB,kBAAC,IAAML,SAAP,KACE,kBAAC,EAAD,gCACA,kBAAC,EAAD,0EACqE,IACnE,uBAAGD,KAAK,sCAAR,4BAGDpD,GAAS,sDAA4B0D,GACrCwC,GACC,kBAAC,IAAM7C,SAAP,KACE,kBAAC,EAAD,KAAc6C,EAAQ3J,OACtB,kBAAC,IAAD,CAAkB0C,IAAKiH,EAAQtJ,SAAUsC,UAAU,EAAOG,UAAQ,IAClE,kBAAC,EAAD,KAAO6G,EAAQ1J,aACf,kBAAC,EAAD,KACE,uBAAGiB,OAAO,SAAS2F,KAAM8C,EAAQjG,YAC9BiG,EAAQ5J,WAGb,kBAAC,EAAD,gCAA+B4J,EAAQhG,eCpClC,SAASqG,GAASxL,GAAQ,IAAD,EACHqH,mBAAS,MADN,mBAC/BoE,EAD+B,KACrBC,EADqB,KAYtC,OATA5D,qBAAU,WACR/E,MAAM,UACHO,MAAK,SAAAyE,GAAC,OAAIA,EAAEC,UACZ1E,MAAK,SAAAqI,GACJnL,QAAQC,IAAIkL,GACZD,EAAeC,QAElB,IAGD,kBAAC,IAAMrD,SAAP,KACE,kBAAC,EAAD,gCACA,kBAAC,EAAD,0EACqE,IACnE,uBAAGD,KAAK,sCAAR,4BAGDoD,GACCA,EAAStB,KAAI,SAAA1H,GAAC,OACZ,yBAAKiB,IAAKjB,EAAEjB,OACV,kBAAC,EAAD,KAAciB,EAAEjB,OAChB,kBAAC,IAAD,CAAkB0C,IAAKzB,EAAEZ,SAAUyC,UAAQ,EAACH,UAAU,IACtD,kBAAC,EAAD,KAAO1B,EAAEhB,aACT,yBACE8C,MAAO,CACLiE,QAAS,OACTC,cAAe,MACfC,eAAgB,kBAEjBjG,EAAElB,SACC,kBAAC,EAAD,WACM,IACHkB,EAAEyC,WACC,uBACEmD,KACE5F,EAAEyC,WAAW0G,SAAS,QAClBnJ,EAAEyC,WADN,iBAEczC,EAAEyC,YAElBxC,OAAO,UACND,EAAElB,UAGL,8BAAOkB,EAAElB,WAGjB,kBAAC,EAAD,kBAEF,kBAAC,EAAD,KACE,uBAAG8G,KAAI,kBAAa5F,EAAEkG,MAAQjG,OAAO,UAArC,mB,0JC3ChB,IAAMgH,GAAYtI,IAAOC,IAAV,MA2BAwK,G,iLAlBX,OACE,kBAAC,KAAD,KACE,kBAAC,GAAD,KACE,kBAAC,KAAD,CAAOC,OAAK,EAACC,KAAK,IAAI3G,UAAW4G,IAEjC,kBAAC,KAAD,CAAOD,KAAK,SAAS3G,UAAWuE,KAChC,kBAAC,KAAD,CAAOmC,OAAO,EAAMC,KAAK,gBAAgB3G,UAAW8F,KAEpD,kBAAC,KAAD,CAAOY,OAAO,EAAMC,KAAK,YAAY3G,UAAWoG,KAEhD,kBAAC,EAAD,Y,GAZQtK,aCVZ+K,GAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASf,MACvB,2DAsCN,SAASgB,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTjJ,MAAK,SAAAqJ,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB5M,QACfuM,UAAUC,cAAcO,WAK1BxM,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrB8C,OAAM,SAAA0B,GACLzE,QAAQyE,MAAM,4CAA6CA,MCxEjEgI,IAASC,OACL,kBAAC,GAAD,MACFC,SAASC,eAAe,SDWX,WACb,GAA6C,kBAAmBZ,UAAW,CAGzE,GADkB,IAAIa,IAAIC,GAAwBnB,OAAOC,UAC3CmB,SAAWpB,OAAOC,SAASmB,OAIvC,OAGFpB,OAAOqB,iBAAiB,QAAQ,WAC9B,IAAMjB,EAAK,UAAMe,GAAN,sBAEPrB,KAiDV,SAAiCM,GAE/BxJ,MAAMwJ,GACHjJ,MAAK,SAAAmK,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASrK,QAAQuK,IAAI,gBAAgBC,QAAQ,cAG7CpB,UAAUC,cAAcoB,MAAMvK,MAAK,SAAAqJ,GACjCA,EAAamB,aAAaxK,MAAK,WAC7B6I,OAAOC,SAAS2B,eAKpBzB,GAAgBC,MAGnBhJ,OAAM,WACL/C,QAAQC,IACN,oEArEAuN,CAAwBzB,GAIxBC,UAAUC,cAAcoB,MAAMvK,MAAK,WACjC9C,QAAQC,IACN,gHAMJ6L,GAAgBC,OCtCxB0B,K","file":"static/js/main.d7570ac9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component} from 'react';\nimport PropTypes from 'prop-types';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nlet openSnackbarFn;\n\nclass Notifier extends Component {\n  static propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n  };\n  state={\n    open : false,\n    message: ''\n  }\n\n  componentDidMount() {\n    openSnackbarFn = this.openSnackbar.bind(this)\n  }\n\n  openSnackbar (message) {\n    this.setState({\n      open: true,\n      message,\n    });\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  handleSnackbarClose(){\n    this.setState({\n       open:false,\n       message:''\n    })\n  }\n\n  render() {\n    console.log(this.state.message)\n    return (\n      <Snackbar\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n          message={<span id=\"message-id\">{this.state.message}</span>}\n          autoHideDuration={3000}\n          onClose={this.handleSnackbarClose.bind(this)}\n          open={this.state.open}\n          SnackbarContentProps={{\n            'aria-describedby': 'snackbar-message-id',\n          }} />\n    );\n  }\n}\n\nexport default Notifier;\n\nexport function openSnackbar( message ) {\n  openSnackbarFn( message );\n}\n","import React, { Component} from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { withStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport DropzoneS3Uploader from 'react-dropzone-s3-uploader'\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ReactAudioPlayer from 'react-audio-player';\nimport Notifier, { openSnackbar }  from './Notifier'\n\nconst FormContainer = styled.div`\n   display:grid;\n   grid-template-columns: repeat(1, 1fr);\n   grid-gap: 10px;\n   align-content: center;\n   justify-content: center;\n`;\n\nconst blankState = {\n    submitor:'',\n    title:'',\n    description:'',\n    email:'',\n    name:'',\n    submissionType: 'Your Work',\n    audioURL:null,\n    duration: null,\n    includeEmail: false,\n    errors:{}\n  }\n\nconst progressComponent = (props)=>(\n  <p>Progress</p>\n)\nclass SubmitForm extends Component {\n  state = blankState\n\n  static propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n  };\n\n  handleFinishedUpload(info){\n    openSnackbar(\"Succesfully uploaded file\")\n    console.log('file info ', info)\n    this.setState({\n      audioURL: info.fileUrl,\n      audioFileSize: info.file.size,\n      audioFileType: \"audio/mpeg\",\n      prog:null})\n  }\n\n  handleSoundLoaded(e){\n    this.setState({\n      duration : e.target.duration\n    })\n  }\n\n  handleChange(name){\n    return (event) => {\n      this.setState({\n        [name]: event.target.type === 'checkbox' ? event.target.checked : event.target.value,\n      });\n    };\n  };\n\n  createSubmission(){\n    openSnackbar('Attempting to submit')\n    fetch('/entry/', {\n      method:\"POST\",\n      body: JSON.stringify(this.state),\n      headers: {\n        'content-type': 'application/json'\n      },\n      mode: 'cors'\n    }).then(()=>{\n      this.setState({\n        title:'',\n        description:'',\n        audioURL:null,\n      })\n      openSnackbar('Successfully submitted!')\n    }).catch(()=>{\n      openSnackbar('Something went wrong send us an email at longlivethenewsound@gmail.com')\n    })\n  }\n\n  validateAndSubmit(){\n    console.log('validating')\n    const errors = ['submitor', 'title', 'email','description', 'submissionType', 'audioURL', 'acknowledgement'].reduce((errorHash, key)=>{\n      if(!this.state[key] || this.state[key].length ==0){\n        errorHash[key] = 'This is required field'\n      }\n      return errorHash\n    }, {} )\n\n    this.setState({errors},()=>{\n      if(Object.values(this.state.errors).filter(a=>a).length==0){\n        console.log('submitting')\n        this.createSubmission()\n      }\n      else{\n        openSnackbar(\"Make sure you filled out all the fields and checked the acknowledgement\")\n      }\n    })\n  }\n\n  submit(){\n    this.validateAndSubmit()\n  }\n\n  renderSound(){\n    if(this.state.audioURL){\n      return(\n        <ReactAudioPlayer\n          src= {this.state.audioURL}\n          autoPlay={false}\n          onLoadedMetadata = {this.handleSoundLoaded.bind(this)}\n          controls\n        />\n      )\n    }\n  }\n\n  renderDropzoneContent(){\n    if(this.state.audioURL){\n      return (<p style={{textAlign:'center'}}>\n        {this.state.audioURL.split('/') [this.state.audioURL.split('/').length - 1]}\n      </p>)\n    }\n    else if (this.state.prog){\n      return (<p style={{textAlign:'center'}}> {this.state.prog} / 100 % </p>)\n    }\n    else if (this.state.errors.audioURL !== undefined){\n      return (<p style={{color:'red', textAlign:'center'}}>You didn't submit a file</p>)\n    }\n    else{\n      return ( <p style={{textAlign:'center'}}>\n        Click here or drop a file to upload\n      </p>)\n    }\n  }\n\n  render() {\n    const uploadOptions={\n      s3path: '/submissions/',\n      ContentType: \"audio/wav\"\n    }\n    return (\n      <FormContainer>\n        <TextField\n          id='submitor'\n          required\n          label='Artist name / Alias / Organization'\n          value={this.state.submitor}\n          onChange={this.handleChange('submitor')}\n          errorText={this.state.errors.submitor}\n          error= {this.state.errors.submitor}\n        />\n\n        <TextField\n          id='name'\n          label='Your name (optional)'\n          value={this.state.name}\n          onChange={this.handleChange('name')}\n        />\n\n        <TextField\n          id='title'\n          required\n          label='Title'\n          value={this.state.title}\n          onChange={this.handleChange('title')}\n          errorText={this.state.errors.title}\n          error={this.state.errors.title}\n        />\n\n        <TextField\n          id='Description and/or credits (will appear in episode description along with artist name and optional contact information)'\n          required\n          label='Description'\n          value={this.state.description}\n          onChange={this.handleChange('description')}\n          errorText={this.state.errors.description}\n          error={this.state.errors.description}\n        />\n\n        <TextField\n          id='email'\n          required\n          label=\"Contact Email (wont be publicly publised, just for us to keep you in the loop)\"\n          value={this.state.email}\n          onChange={this.handleChange('email')}\n          errorText={this.state.errors.email}\n          error={this.state.errors.email}\n        />\n\n        <TextField\n          id='artistlink'\n          label='Artist Link (optional)'\n          value={this.state.artistLink}\n          onChange={this.handleChange('artistLink')}\n        />\n\n        <TextField\n          id='socialMedia'\n          label='Social Media Link (optional)'\n          value={this.state.socialMedia}\n          onChange={this.handleChange('socialMedia')}\n        />\n\n        <FormControl component=\"fieldset\" required >\n\n          <FormLabel  component=\"legend\">Submission Type</FormLabel>\n          <RadioGroup\n            row\n            value={this.state.submissionType}\n            onChange={this.handleChange('submissionType')}>\n\n            <FormControlLabel value=\"Your Work\" control={<Radio color=\"primary\" />} label=\"Your Work\" />\n            <FormControlLabel value=\"Submitted Work\" control={<Radio color=\"primary\" />} label=\"Someone elses work\" />\n\n          </RadioGroup>\n        </FormControl>\n\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={this.state.acknowledgement}\n              onChange={this.handleChange('acknowledgement')}\n              value=\"acknowledgement\"\n              error = {this.state.errors.acknowledgement}\n            />\n          }\n          error = {this.state.errors.acknowledgement}\n          label=\"By submitting work you acknowledge that you are either the owner, or have the right to distribute submitted materials. LLtNS does not make money from the work submitted and artists do not make money from submitting materials to LLtNS. All rights remain with their original creator.\"\n        />\n\n        <DropzoneS3Uploader\n            onFinish={this.handleFinishedUpload.bind(this)}\n            s3Url={'https://longlivethenewsound.s3.amazonaws.com/'}\n            maxSize={1024 * 1024 * 500}\n            upload={uploadOptions}\n            accept=\"audio/*\"\n            style={{width:'100%', border:'1px dashed black'}}\n            onDone ={(d) => console.log('done ',d)}\n            onProgress={(prog)=>{this.setState({prog:prog})}}\n          >\n          <div style={{boxSizing:'border-box', padding:'10px'}}>\n            {this.renderDropzoneContent()}\n          </div>\n\n         </DropzoneS3Uploader>\n\n        {this.renderSound()}\n        <Button variant=\"raised\" color=\"primary\" onClick={()=>this.submit()} >Submit</Button>\n      </FormContainer>\n    );\n  }\n}\n\nexport default SubmitForm;\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography';\n\nexport const HeaderLarge = props => (\n  <Typography style={{fontSize: '3.0rem'}} variant=\"display3\" gutterBottom>\n    {props.children}\n  </Typography>\n);\n\nexport const HeaderSmall = props => (\n  <Typography\n    variant=\"display2\"\n    style={{marginBottom: '10px', marginTop: '20px', fontSize: '2rem'}}\n    gutterBottom>\n    {props.children}\n  </Typography>\n);\n\nexport const Text = props => (\n  <Typography\n    variant=\"body2\"\n    style={{marginBottom: '10px', fontWeight: 300}}\n    gutterBottom>\n    {props.children}\n  </Typography>\n);\n","import React, {useEffect, useState} from 'react';\nimport SubmitForm from './SubmitForm';\nimport {HeaderLarge, HeaderSmall, Text} from './Type';\n\nimport ReactAudioPlayer from 'react-audio-player';\n\nexport default props => {\n  const [current, updateCurrent] = useState(null);\n  const [next, updateNext] = useState(null);\n  const [shouldAutoplay, updateAutoplay] = useState(false);\n\n  const [entries, updateEntries] = useState(null);\n  useEffect(() => {\n    fetch('/entry')\n      .then(r => r.json())\n      .then(ents => {\n        updateEntries(ents);\n        updateCurrent(ents[Math.floor(Math.random() * ents.length)]);\n        updateNext(ents[Math.floor(Math.random() * ents.length)]);\n      });\n  }, []);\n\n  return (\n    <div>\n      <HeaderLarge>LLtNS : Long Live the New Sound</HeaderLarge>\n      <Text>\n        The anti-podcast podcast for creative audio. Freeform & public access,\n        always.\n        <br />\n        Listen: <a href=\"/episodes\">Episodes</a>\n        {' | '}\n        <a href=\"https://feed.longlivethenewsound.com/rss.xml\">RSS</a> {' | '}\n        <a href=\"https://pca.st/sn8i\">PocketCasts</a>\n        {' | '}\n        <a href=\"https://radiopublic.com/long-live-the-new-sound-GbxBeN\">\n          {' '}\n          {' | '}\n          RadioPublic\n        </a>\n        {' | '}\n        + wherever you get your podcasts (and itunes)\n        <br />\n        For More: <a href=\"https://twitter.com/LLtNSound\">\n          @the_newsound\n        </a>{' '}\n        {' | '}\n        <a href=\"https://tinyletter.com/LLtNS\">Newsletter</a>\n      </Text>\n\n      {current && next && (\n        <React.Fragment>\n          <HeaderSmall>Listen to the new sound</HeaderSmall>\n          <ReactAudioPlayer\n            style={{width: '100%'}}\n            src={current.audioURL}\n            autoPlay={shouldAutoplay}\n            controls\n            onEnded={() => {\n              updateCurrent(next);\n              updateNext(entries[Math.floor(Math.random() * entries.length)]);\n              updateAutoplay(true);\n            }}\n          />\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n            }}>\n            <Text style>\n              Now: <a href={`/listen/${current.slug}`}>{current.title}</a>\n            </Text>\n            <Text>\n              Next: <a href={`/listen/${next.slug}`}>{next.title}</a>\n            </Text>\n          </div>\n          <Text>\n            <a href=\"/episodes\">All episodes</a>\n          </Text>\n        </React.Fragment>\n      )}\n\n      <HeaderSmall>About & Hello </HeaderSmall>\n      <Text>\n        LLtNS is a freeform, non-commercial podcast where artists, amatures,\n        archivists, producers... anyone really can contribute episodes as they\n        like. Episodes are presented as they are contributed without hosts,\n        without ads and without curation.\n      </Text>\n\n      <Text>\n        The goal is to provide <b>a fully open space for sonic-play</b>\n      </Text>\n      <Text>Think of it like a public access podcast for creative audio.</Text>\n\n      <HeaderSmall>Submit Your Work</HeaderSmall>\n\n      <Text>Before submitting please read our guidelines below.</Text>\n\n      <SubmitForm />\n      <HeaderSmall>Contribution Guidelines</HeaderSmall>\n      <Text>\n        We accept contributions from the genre-less, genre-bending, including\n        (but not limited to)\n        <ul>\n          <li>Sound & radio arts</li>\n          <li>Acoustic ecology & field recording</li>\n          <li>ASMR</li>\n          <li>Creative meditation</li>\n          <li>Mixtape storytelling</li>\n          <li>Experimental documentary & Interview</li>\n          <li>Collage & plunderphonics</li>\n          <li>Field recording & environmental remixes</li>\n          <li>Radical Soundwalks </li>\n          <li>Fiction/non-fiction bending narratives & poetry</li>\n          <li>Sonic Experiments & Ambience (but not music**)</li>\n          <li>Variations on Ferk</li>\n          <li>Archival audio works from the past</li>\n          <li>Remixes of work already on the LLtNS feed</li>\n          <li>… and anything else that we may not have thought to list. </li>\n        </ul>\n      </Text>\n\n      <Text>\n        We don’t curate the work but we are screening to make sure the work\n        meets our stated guidelines, does not include hateful content, and is in\n        the spirit of experimentation. Please bear with us as we figure out what\n        exactly that means.\n      </Text>\n      <Text>\n        Note: <b>This is not a music podcast</b>. We accept the musical & works\n        that include music, but we do not accept music. This an an outlet for\n        non-music creative audio.\n      </Text>\n      <HeaderSmall>Technical Guidelines</HeaderSmall>\n      <Text>\n        <ul>\n          <li>Minimum time: 5 seconds</li>\n          <li>\n            Maximum time: 1 hour (If your piece is longer than an hour, please\n            email us and we will try to include it to the feed)\n          </li>\n          <li>\n            <b>Format: Mp3</b>\n          </li>\n          <li>Experimental, strange, genre-bending, audio centric work</li>\n          <li>\n            Please do not submit music but you may have music within the piece\n            submitted\n          </li>\n          <li>\n            Remove any station or host intro/outro unless it is a necessary part\n            of the piece (include all credits in the written description)\n          </li>\n        </ul>\n        This is a non commercial vehicle. Nobody is making money from this and\n        nobody intends to. LLtNS will include contributed work on the feed, the\n        livestream and links in the newsletter, but the artist maintains all the\n        rights to their own work.\n        <br />\n        If you have either created something, or have access to material\n        (historic or otherwise) please submit! We screen each piece to prevent\n        hateful content and to ensure that it fits into the guidelines listed\n        here. But we hope to be able to include almost everything submitted.\n        <br />\n        Be sure to include your name (or artist, collective name) and a brief\n        description or information about the work. You may also include a link\n        to your work online, and social media links. This will appear in the\n        episode description.\n        <br />\n        <b>We also ask that you include an email address</b> in case we need to\n        contact you about the work - your contact information will not be\n        included in the podcast description unless you want it to. This is just\n        so we can contact you if something goes wrong.\n      </Text>\n\n      <HeaderSmall>Listening to the Feed</HeaderSmall>\n      <Text>\n        LLtNS is not a traditional sounding podcast. We do not have hosts or ads\n        or release schedules. Episodes come out as they are contributed by\n        sound-makers around the world and that’s reflected in huge variety of\n        audio on the feed. You’ll find everything from a{' '}\n        <a href=\"http://www.longlivethenewsound.com/listen/100-episodes-of-simplesoundscapes-raw\">\n          5 hour soundscape\n        </a>{' '}\n        to{' '}\n        <a href=\"http://www.longlivethenewsound.com/listen/mindferk\">\n          a 14 second mouth sound\n        </a>\n        .\n        <br />\n        Listen to LLtNS as a randomized livestream from our website, or download\n        the feed from wherever you get your podcasts.\n        <br />\n        Find a list of episodes & artists in <a href=\"/episodes\">Episodes</a>.\n      </Text>\n      <HeaderSmall>Who is behind this?</HeaderSmall>\n      <Text>\n        The feed is maintained by Adriene & Stuart. We listen to the feed. We\n        make sure the sounds stay available and that the contribution process is\n        easy. Sometimes we send out a{' '}\n        <a href=\"https://tinyletter.com/LLtNS\">newsletter</a> about what’s new,\n        sometimes we tweet about the new sounds{' '}\n        <a href=\"https://twitter.com/LLtNSound\">@LLtNSound</a>. But the sounds\n        behind the feed were contributed by people around the world. Find the\n        complete list in <a href=\"/episodes\">Episodes</a>.\n        <br />\n        You can always email us with questions, concerns or just to chat:{' '}\n        <a href=\"mailto:longlivethenewsound@gmail.com\">\n          longlivethenewsound@gmail.com\n        </a>\n      </Text>\n\n      <HeaderSmall>What happens next?</HeaderSmall>\n      <Text>\n        We review each piece before it appears in the feed and will let you know\n        when it appear on the show. Please direct any questions to:\n        <a href=\"mailto:longlivethenewsound@gmail.com\">\n          longlivethenewsound@gmail.com\n        </a>\n        . If you hear something you want know more about, check the episode\n        description for information provided by the uploader. If you want to\n        support any of the work you find on this show, please find the artists\n        directly.\n      </Text>\n    </div>\n  );\n};\n","import React from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nclass Authenticate extends React.Component{\n  state={\n    username:'',\n    password:''\n  }\n  render(props){\n    return (\n      <div>\n        <TextField\n          id= 'username'\n          label=\"Username\"\n          required\n          value = {this.state.username}\n          type=\"username\"\n          autoComplete='username'\n          onChange= { (e) => {this.setState({username: e.target.value})}}\n        />\n\n        <TextField\n          id= 'password'\n          label=\"password\"\n          required\n          type=\"password\"\n          autoComplete='current-password'\n          value = {this.state.password}\n          onChange= { (e) => {this.setState({password: e.target.value})}}\n        />\n\n      <Button\n        variant=\"raised\"\n        color=\"primary\"\n        onClick={()=>{this.props.onAttemptLogin(this.state.username,this.state.password)}}> Submit </Button>\n      </div>\n    )\n  }\n}\n\nexport default Authenticate\n","import React from \"react\";\nimport ReactAudioPlayer from \"react-audio-player\";\nimport Button from \"@material-ui/core/Button\";\n\nconst stateColors = {\n    pending: \"blue\",\n    approved: \"green\",\n    rejected: \"red\"\n};\n\nexport default props => (\n    <div style={{ width: \"100%\", marginTop: \"20px\" }}>\n        <p>Title: {props.title}</p>\n        <p>\n            State:{\" \"}\n            <span style={{ color: stateColors[props.state] }}>\n                {props.state}\n            </span>\n        </p>\n        <p>Description: {props.description}</p>\n        <p>Sumbission Type: {props.submissionType}</p>\n        <p>Artist Link: {props.artistLink}</p>\n        <p>Social Link: {props.socialMedia}</p>\n        <p>Email: {props.email}</p>\n        <p>Gave permision: {props.acknowledgement}</p>\n\n        <p> Submited by : {} </p>\n        <ReactAudioPlayer src={props.audioURL} autoPlay={false} controls />\n        {props.adminControlls && (\n            <div>\n                <Button\n                    variant=\"raised\"\n                    color=\"secondary\"\n                    onClick={() => {\n                        props.onReject(props._id);\n                    }}\n                >\n                    Reject\n                </Button>\n                <Button\n                    variant=\"raised\"\n                    color=\"primary\"\n                    onClick={() => {\n                        props.onApprove(props._id);\n                    }}\n                >\n                    Aprove\n                </Button>\n            </div>\n        )}\n    </div>\n);\n","import React, { Component} from 'react';\nimport PropTypes from 'prop-types';\nimport Authenticate from './Authenticate'\nimport base64 from 'base-64';\nimport SubmissionView from './SubmissionView'\nimport styled from 'styled-components';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Notifier, { openSnackbar }  from './Notifier'\n\nconst Container = styled.div`\n  width:100%;\n  height:100%;\n  margin-top: 20px;\n`\nclass Admin extends Component {\n  state={\n    auth: null,\n    submissions: null\n  }\n\n  static propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  getHeaders(){\n    let headers = new Headers()\n    headers.append('Authorization', this.state.auth)\n    return headers\n  }\n  getSubmissions(){\n    const headers = this.getHeaders()\n    fetch('/private/entry', {\n      headers: headers\n    }).then(r=>r.json()).then((submissions)=>{\n      this.setState({\n        submissions\n      })\n    })\n  }\n\n  updateSubmission(submission){\n    const newList = this.state.submissions.map( (a) => (a._id===submission._id ? submission : a) )\n    console.log(newList)\n    this.setState({\n      submissions : newList\n    })\n  }\n\n  rejectSubmission(id){\n    const headers = this.getHeaders()\n    fetch(`/private/entry/${id}/reject`,\n      {\n        method : \"POST\",\n        headers: headers\n      }\n    ).then(r=>r.json()).then((savedSubmission)=>{\n      this.updateSubmission(savedSubmission)\n    })\n  }\n  publishFeed(){\n\n    const headers = this.getHeaders()\n    fetch(`/private/feed`,\n      {\n        method : \"POST\",\n        headers: headers\n      }\n    ).then(r=>r.json()).then((savedSubmission)=>{\n      openSnackbar(\"Succesfully published feed. LLTNS!!!\")\n    }).catch((err)=>{\n      openSnackbar(\"Something went wrong publishing the feed :-(\")\n    })\n\n  }\n  acceptSubmission(id){\n    const headers = this.getHeaders()\n    fetch(`/private/entry/${id}/approve`,\n      {\n        method : \"POST\",\n        headers: headers\n      }\n    ).then(r=>r.json()).then((savedSubmission)=>{\n      console.log(savedSubmission)\n      this.updateSubmission(savedSubmission)\n    })\n  }\n\n  render() {\n  return (\n      <div style={{flexGrow: 1 }}>\n        { this.state.submissions ?\n            (\n              <AppBar position='sticky'>\n                <Toolbar>\n                  <Typography variant=\"title\" color=\"inherit\" style={{ flex: 1 }} >\n                    Long Live the New Sound Feed Admin\n                  </Typography>\n                  <Button onClick={this.publishFeed.bind(this)} color=\"inherit\">Publish</Button>\n               </Toolbar>\n             </AppBar>\n            ) : null\n        }\n        <Container>\n\n          { this.state.submissions ?\n                   this.state.submissions.map((sub)=>(\n                     <SubmissionView\n                       {...sub}\n                       key={sub._id}\n                       onReject={this.rejectSubmission.bind(this)}\n                       onApprove={this.acceptSubmission.bind(this)}\n                       adminControlls\n                     />\n                   ))\n           :\n              (\n            <Authenticate\n              onAttemptLogin={ (username,password)=>{\n                const auth = 'Basic ' + base64.encode(username + \":\" + password);\n                this.setState({auth},\n                  this.getSubmissions.bind(this)\n                )\n              }}\n            />\n              )\n          }\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Admin;\n","import React, {useEffect, useState} from 'react';\nimport ReactAudioPlayer from 'react-audio-player';\nimport {HeaderLarge, HeaderSmall, Text} from './Type';\n\nexport default function Listen(props) {\n  const [episode, updateEpisode] = useState(null);\n  const [error, updateError] = useState(false);\n  const slug = props.match.params.slug;\n\n  useEffect(() => {\n    fetch(`/entry/${slug}`)\n      .then(r => r.json())\n      .then(episode => {\n        updateEpisode(episode);\n        console.log(episode);\n      })\n      .catch(err => {\n        updateError(true);\n      });\n  }, props.match.params.slug);\n\n  return (\n    <React.Fragment>\n      <HeaderLarge>Long Live the New Sound</HeaderLarge>\n      <Text>\n        An anti-podcast podcast. Find out more and submit your own work at{' '}\n        <a href=\"http://www.longlivethenewsound.com\">longlivethenewsound.com</a>\n      </Text>\n\n      {error && <h1>Could not find episode {slug}</h1>}\n      {episode && (\n        <React.Fragment>\n          <HeaderSmall>{episode.title}</HeaderSmall>\n          <ReactAudioPlayer src={episode.audioURL} autoPlay={false} controls />\n          <Text>{episode.description}</Text>\n          <Text>\n            <a target=\"_blank\" href={episode.artistLink}>\n              {episode.submitor}\n            </a>\n          </Text>\n          <Text>More from the artist at {episode.socialMedia}</Text>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n","import React, {useState, useEffect} from 'react';\nimport ReactAudioPlayer from 'react-audio-player';\nimport {HeaderLarge, HeaderSmall, Text} from './Type';\n\nexport default function ListPage(props) {\n  const [episodes, updateEpisodes] = useState(null);\n\n  useEffect(() => {\n    fetch('/entry')\n      .then(r => r.json())\n      .then(res => {\n        console.log(res);\n        updateEpisodes(res);\n      });\n  }, []);\n\n  return (\n    <React.Fragment>\n      <HeaderLarge>Long Live the New Sound</HeaderLarge>\n      <Text>\n        An anti-podcast podcast. Find out more and submit your own work at{' '}\n        <a href=\"http://www.longlivethenewsound.com\">longlivethenewsound.com</a>\n      </Text>\n\n      {episodes &&\n        episodes.map(e => (\n          <div key={e.title}>\n            <HeaderSmall>{e.title}</HeaderSmall>\n            <ReactAudioPlayer src={e.audioURL} controls autoPlay={false} />\n            <Text>{e.description}</Text>\n            <div\n              style={{\n                display: 'flex',\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n              }}>\n              {e.submitor ? \n                  <Text>\n                    By:{' '}\n                    {e.artistLink ?\n                        <a\n                          href={\n                            e.artistLink.includes('http')\n                              ? e.artistLink\n                              : `http://${e.artistLink}`\n                          }\n                          target=\"_blank\">\n                          {e.submitor}\n                      </a>\n                    :\n                        <span>{e.submitor}</span>\n                    }\n                  </Text>\n              : <Text>Anonymous</Text>\n             }\n              <Text>\n                <a href={`/listen/${e.slug}`} target=\"_blank\">\n                  Permlink\n                </a>\n              </Text>\n            </div>\n          </div>\n        ))}\n    </React.Fragment>\n  );\n}\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport styled from 'styled-components';\nimport Typography from '@material-ui/core/Typography';\nimport 'typeface-roboto'\nimport Notifier from './components/Notifier'\nimport HomePage from './components/HomePage'\nimport Admin from './components/Admin'\nimport Listen from './components/Listen'\nimport ListPage from './components/ListPage'\nimport { BrowserRouter, Route} from 'react-router-dom'\n\nconst Container = styled.div`\n display:grid;\n align-content: center;\n justify-content: center;\n`;\n\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Container>\n          <Route exact path='/' component={HomePage}/>\n\n          <Route path='/admin' component={Admin}/>\n          <Route exact={true} path='/listen/:slug' component={Listen}/>\n\n          <Route exact={true} path='/episodes' component={ListPage}/>\n\n          <Notifier />\n        </Container>\n      </BrowserRouter>\n\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nReactDOM.render(\n    <App />\n, document.getElementById('root'))\nregisterServiceWorker();\n"],"sourceRoot":""}